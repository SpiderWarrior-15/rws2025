export interface Song {
  id: string;
  title: string;
  artist: string;
  embedUrl: string;
  thumbnail?: string;
}

export interface Puzzle {
  id: string;
  question: string;
  answer: string;
  difficulty: 'easy' | 'medium' | 'hard' | 'super_hard';
  isActive: boolean;
  createdAt: string;
  weekNumber: number;
  year: number;
  category?: string;
  autoGenerated?: boolean;
}

export interface PuzzleAttempt {
  id: string;
  puzzleId: string;
  userId: string;
  userAnswer: string;
  isCorrect: boolean | null; // null = pending admin review
  submittedAt: string;
  reviewedAt?: string;
  reviewedBy?: string;
  score: number;
}

export interface PuzzleScore {
  userId: string;
  userName: string;
  totalScore: number;
  weeklyScore: number;
  correctAnswers: number;
  totalAttempts: number;
  lastActivity: string;
  rank: number;
}

export interface Event {
  id: string;
  title: string;
  description: string;
  date: string;
  place: string;
  time?: string;
}

export interface ContactMessage {
  id: string;
  name: string;
  email: string;
  message: string;
  timestamp: string;
  isRead: boolean;
}

export interface AdminUser {
  username: string;
  password: string;
}

export interface MarkingCriteria {
  id: string;
  name: string;
  description: string;
  maxScore: number;
  category: 'participation' | 'creativity' | 'technical' | 'leadership' | 'collaboration';
  isActive: boolean;
  createdAt: string;
}

export interface WarriorMember {
  id: string;
  name: string;
  email: string;
  joinDate: string;
  avatar?: string;
  isActive: boolean;
  provider?: 'email' | 'google';
  accountType?: 'user' | 'admin';
  role: 'Warrior' | 'Commander';
}

export interface Mark {
  id: string;
  warriorId: string;
  criteriaId: string;
  score: number;
  feedback?: string;
  markedBy: string;
  markedAt: string;
  eventId?: string;
}

export interface MarkingSummary {
  warriorId: string;
  totalScore: number;
  averageScore: number;
  markCount: number;
  categoryScores: Record<string, number>;
  lastMarked: string;
}

export interface UserAccount {
  id: string;
  name: string;
  email: string;
  whatsapp: string;
  dateOfBirth: string;
  gender: 'male' | 'female' | 'other';
  city: string;
  country: string;
  interests: string[];
  accountType: 'user' | 'admin';
  role: 'Warrior' | 'Commander';
  status: 'pending' | 'approved' | 'rejected';
  createdAt: string;
  approvedAt?: string;
  approvedBy?: string;
  rejectionReason?: string;
  avatar?: string;
  provider?: 'email' | 'google';
  providerId?: string;
  googleLinked?: boolean;
  customPassword?: string; // For storing custom passwords
}

export interface AuthUser {
  id: string;
  name: string;
  email: string;
  accountType: 'user' | 'admin';
  role: 'Warrior' | 'Commander';
  avatar?: string;
  username: string;
  googleLinked?: boolean;
}

export interface LoginCredentials {
  email: string;
  password: string;
}

export interface SignUpData {
  name: string;
  email: string;
  password: string;
  confirmPassword: string;
  whatsapp: string;
  dateOfBirth: string;
  gender: 'male' | 'female' | 'other';
  city: string;
  country: string;
  interests: string[];
  accountType: 'user' | 'admin';
  role: 'Warrior' | 'Commander';
}

export interface HomepageContent {
  id: string;
  heroTitle: string;
  heroSubtitle: string;
  heroDescription: string;
  welcomeBadgeText: string;
  primaryButtonText: string;
  secondaryButtonText: string;
  aboutTitle: string;
  aboutDescription: string;
  missionTitle: string;
  missionDescription: string;
  tagline: string;
  taglineSubtext: string;
  features: {
    id: string;
    title: string;
    description: string;
    icon: string;
  }[];
  stats: {
    id: string;
    value: string;
    label: string;
    color: string;
  }[];
  lastUpdated: string;
  updatedBy: string;
}

// Chat System Types
export interface ChatGroup {
  id: string;
  name: string;
  description: string;
  avatar?: string;
  type: 'public' | 'private';
  createdBy: string;
  createdAt: string;
  members: string[];
  admins: string[];
  isActive: boolean;
  lastActivity: string;
}

export interface ChatMessage {
  id: string;
  groupId: string;
  senderId: string;
  senderName: string;
  senderAvatar?: string;
  content: string;
  type: 'text' | 'image' | 'file' | 'system';
  timestamp: string;
  editedAt?: string;
  replyTo?: string;
  reactions: ChatReaction[];
  isDeleted: boolean;
}

export interface ChatReaction {
  id: string;
  messageId: string;
  userId: string;
  emoji: string;
  timestamp: string;
}

export interface DirectMessage {
  id: string;
  participants: string[];
  lastMessage?: ChatMessage;
  lastActivity: string;
  unreadCount: Record<string, number>;
}

export interface ChatNotification {
  id: string;
  userId: string;
  type: 'message' | 'mention' | 'group_invite' | 'group_update';
  title: string;
  content: string;
  groupId?: string;
  messageId?: string;
  isRead: boolean;
  timestamp: string;
}

// User Profile Types
export interface UserProfile {
  id: string;
  userId: string;
  bio?: string;
  skills: string[];
  achievements: string[];
  socialLinks: {
    github?: string;
    linkedin?: string;
    twitter?: string;
    website?: string;
  };
  preferences: {
    emailNotifications: boolean;
    pushNotifications: boolean;
    publicProfile: boolean;
  };
  stats: {
    totalPoints: number;
    rank: number;
    puzzlesSolved: number;
    eventsAttended: number;
    messagesPosted: number;
  };
  lastActive: string;
}